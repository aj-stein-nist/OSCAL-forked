name: Validate Website Content

on:
  workflow_call:
    inputs:
      needs_checkout:
        description: 'check out another branch before scanning path'
        required: true
        default: true
        type: boolean
      site_git_ref:
        description: 'git ref, a SHA commit or branch or tag, for the published HTML content'
        required: true
        default: 'nist-pages'
        type: string
      site_git_ref_path:
        description: 'the subdirectory to check out git ref and check links in website content'
        required: true
        default: 'published'
        type: string
jobs:
  schedule-validate-website-links:
    runs-on: ubuntu-latest
    env:
      DEFAULT_SITE_GIT_REF: nist-pages
      DEFAULT_SITE_GIT_REF_PATH: published
    steps:
    - name: Set published site git ref (from workflow_dispatch input)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.site_git_ref
      run: |
        echo SITE_GIT_REF="${{ github.event.inputs.site_git_ref }}" >> $GITHUB_ENV
        echo SITE_GIT_REF_PATH="${{ github.event.inputs.site_git_ref_path }}" >> $GITHUB_ENV
    - name: Set published site git ref (default)
      if: github.event_name != 'workflow_dispatch'
      run: |
        echo SITE_GIT_REF="${{ env.DEFAULT_SITE_GIT_REF }}" >> $GITHUB_ENV
        echo SITE_GIT_REF_PATH="${{ env.DEFAULT_SITE_GIT_REF_PATH }}" >> $GITHUB_ENV
    # This workflow requires two branches to be checked out
    # 1) The main branch with all code, including website content link checker config.
    # 2) The target branch where the website content, rendered from source code, is saved.
    # Checkout the current branch for reading
    - name: Checkout Latest
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # this ensures that the tag and commit history are available
      id: checkout_main_workflow
    - name: Checkout git ref of published website content
      if: inputs.needs_checkout
      uses: actions/checkout@v3
      with:
        path: ${{ env.SITE_GIT_REF_PATH }}
        ref: ${{ env.SITE_GIT_REF }}
    - run: |
        ls -lha $(pwd)/published
    - name: Check website HTML content links
      id: linkchecker
      uses: lycheeverse/lychee-action@f1da3291e1d03cbe11a413ae9f16b62fec99e6b6 # v1.4.1
      with:
        args: --exclude-file ./build/config/.lycheeignore --verbose --no-progress --accept 200,206,429 './published/**/*.html'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create issue if bad links detected
      if: steps.linkchecker.outputs.exit_code != 0 && (github.event.inputs.createIssue || github.event.inputs.createIssue)
      uses: peter-evans/create-issue-from-file@97e6f902a416aac38834e23fa52e166aad0437d2 # v3.0.0
      with:
        title: Scheduled Check of Website Content Found Bad Hyperlinks
        content-filepath: ./lychee/out.md
        labels: |
          bug
          Scope: Documentation
          Scope: Website          
