name: Validate Repo Markdown
on:
  workflow_call:
    inputs:
      ignorePattern:
        description: 'a pattern provided to grep for files/directories to ignore'
        required: false
        default: '^docs/'
        type: string
      markdownLinkCheckConfig:
        description: 'the path to the markdown link check config file'
        required: false
        default: 'build/config/.markdown-link-check/config.json'
        type: string
      createIssue:
        description: 'determines if reports of broken links open a new GitHub issue'
        required: false
        default: false
        type: boolean
  workflow_dispatch:
    inputs:
      ignorePattern:
        description: 'a pattern provided to grep for files/directories to ignore'
        required: false
        default: '^docs/'
        type: string
      markdownLinkCheckConfig:
        description: 'the path to the markdown link check config file'
        required: false
        default: 'build/config/.markdown-link-check/config.json'
        type: string
      createIssue:
        description: 'determines if reports of broken links open a new GitHub issue'
        required: false
        default: false
        type: boolean
jobs:
  validate-repo-markdown:
    name: Validate Repo Markdown
    runs-on: ubuntu-latest
    steps:
    # use this for pulls where checkout is anonymous
    - uses: actions/checkout@v3 # current: dcd71f646680f2efd8db4afa5ad64fdcba30e748
      with:
        submodules: recursive
    # Variable setup needed to support workflow_call and workflow_Dispath, but the
    # cron job has no access to these context inputs. So we work around that with
    # defaults or interactive values bound to env vars.
    - name: Set up env (enable issue creation)
      if: github.event.inputs.createIssue == 'true' || inputs.createIssue == true
      run: |
        echo CREATE_ISSUE=true >> $GITHUB_ENV
    - name: Set up env (disable issue creation)
      if: github.event.inputs.createIssue == 'false' && inputs.createIssue == false
      run: |
        echo CREATE_ISSUE=false >> $GITHUB_ENV
    # Setup runtime environment
    # -------------------------
    - name: Set up NodeJS
      uses: actions/setup-node@v3 # current: 56337c425554a6be30cdef71bf441f15be286854 
      with:
        node-version-file: 'build/.nvmrc'
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - name: Setup Dependencies
      run: |
        # NodeJS
        cd "${{ github.workspace }}/build"
        # If you are a developer and need to modify the workflow, be sure to review
        # the package.json and package-lock.json to ensure the following deps are
        # at least installed (they will be updated by dependabot):
        # - ajv-cli
        # - ajv-formats
        # - markdown-link-check
        # - yaml-convert
        npm install --loglevel verbose
        echo "$PWD/node_modules/.bin/" >> $GITHUB_PATH
    # Build Artifacts
    # ---------------
    - name: Validate repo Markdown content instances
      id: linkchecker
      run: |
        # this command will filter out any docs Markdown files, which are checked in a different job
        git ls-files "*.md" -z | grep --null-data -v "${{ inputs.ignorePattern }}" | xargs -0 -n1 markdown-link-check -c "${{ inputs.markdownLinkCheckConfig }}"
    - name: Create issue if bad links detected
      if: steps.linkchecker.outputs.exit_code != 0 && env.CREATE_ISSUE
      uses: peter-evans/create-issue-from-file@97e6f902a416aac38834e23fa52e166aad0437d2 # v3.0.0
      with:
        title: Link Checker Report
        content-filepath: steps.linkchecker.report
        labels: bug